{"version":3,"file":"leaflet-wind.esm.js","sources":["../src/index.ts"],"sourcesContent":["import * as L from 'leaflet';\nimport {\n  WindCore,\n  Field,\n  assign,\n  defaultOptions,\n  formatData,\n  isArray,\n  createCanvas,\n} from 'wind-core';\nimport type { IField, IOptions } from 'wind-core';\n\nconst WindLayer = L.Layer.extend({\n  options: {},\n\n  initialize(id: string | number, data: any, options: any) {\n    if (!id) {\n      throw Error('layer id must be specified');\n    }\n\n    this._layerId = id;\n\n    L.Util.setOptions(this, options);\n\n    this.field = null;\n\n    this._map = null;\n\n    this.pickWindOptions();\n\n    this.devicePixelRatio =\n      this.options.devicePixelRatio ||\n      // @ts-ignore\n      ((window.devicePixelRatio || window.screen.deviceXDPI / window.screen.logicalXDPI) as number);\n\n    if (data) {\n      this.setData(data, options.fieldOptions);\n    }\n  },\n\n  _createCanvas(id: string | number, zIndex: number) {\n    const layer = L.DomUtil.create('div', 'leaflet-canvas-layer');\n\n    const canvas = createCanvas(this._width, this._height, this.devicePixelRatio);\n    canvas.id = String(id);\n    canvas.style.position = 'absolute';\n    canvas.style.top = String(0);\n    canvas.style.left = String(0);\n    canvas.style.zIndex = String(zIndex);\n    canvas.style.willChange = 'transform';\n    canvas.style.width = this._width + 'px';\n    canvas.style.height = this._height + 'px';\n\n    layer.appendChild(canvas);\n\n    this._map.getPanes().overlayPane.appendChild(layer);\n\n    return {\n      layer: layer,\n      canvas: canvas,\n    };\n  },\n\n  _reset() {\n    const topLeft = this._map.containerPointToLayerPoint([0, 0]);\n    L.DomUtil.setPosition(this.canvas, topLeft);\n  },\n\n  _onResize(resizeEvent: L.ResizeEvent) {\n    this.canvas.style.width = resizeEvent.newSize.x + 'px';\n    this.canvas.style.height = resizeEvent.newSize.y + 'px';\n    this._width = resizeEvent.newSize.x;\n    this._height = resizeEvent.newSize.y;\n    this._resizeCanvas(this.devicePixelRatio);\n  },\n\n  _zoomStart() {\n    this._moveStart();\n  },\n\n  _moveStart() {\n    if (!this._updating) {\n      this._updating = true;\n    }\n  },\n\n  _animateZoom(event: L.ZoomAnimEvent) {\n    const scale = this._map.getZoomScale(event.zoom);\n\n    const offset = this._map._latLngToNewLayerPoint(\n      this._map.getBounds().getNorthWest(),\n      event.zoom,\n      event.center,\n    );\n\n    L.DomUtil.setTransform(this.canvas, offset, scale);\n  },\n\n  _resizeCanvas(scale: number) {\n    this.canvas.width = this._width * scale;\n    this.canvas.height = this._height * scale;\n  },\n\n  _render() {\n    this._reset();\n\n    const opt = this.getWindOptions();\n    if (!this.wind && this._map) {\n      const ctx = this.canvas.getContext('2d');\n      const data = this.getData();\n\n      this.wind = new WindCore(ctx, opt, data);\n\n      this.wind.project = this.project.bind(this);\n      this.wind.unproject = this.unproject.bind(this);\n      this.wind.intersectsCoordinate = this.intersectsCoordinate.bind(this);\n      this.wind.postrender = () => {\n        // @ts-ignore\n        // this.setCanvasUpdated();\n      };\n    }\n\n    this.wind.prerender();\n\n    this.wind.render();\n  },\n\n  project(coordinate: [number, number]): [number, number] {\n    const pixel = this._map.latLngToContainerPoint(new L.LatLng(coordinate[1], coordinate[0]));\n    return [pixel.x * this.devicePixelRatio, pixel.y * this.devicePixelRatio];\n  },\n\n  unproject(pixel: [number, number]): [number, number] {\n    const coordinates = this._map.containerPointToLatLng(new L.Point(pixel[0], pixel[1]));\n    return [coordinates.lng, coordinates.lat];\n  },\n\n  intersectsCoordinate(coordinate: [number, number]): boolean {\n    const bounds = this._map.getBounds();\n    return bounds.contains(L.latLng(coordinate[1], coordinate[0])) as boolean;\n  },\n\n  onAdd(map: L.Map) {\n    this._map = map;\n    this._width = map.getSize().x;\n    this._height = map.getSize().y;\n\n    const { layer, canvas } = this._createCanvas(this._layerId, this.options.zIndex || 1);\n\n    this.layer = layer;\n    this.canvas = canvas;\n\n    const animated = this._map.options.zoomAnimation && L.Browser.any3d;\n    L.DomUtil.addClass(this.canvas, 'leaflet-zoom-' + (animated ? 'animated' : 'hide'));\n\n    this._map.on(this.getEvents(), this);\n    this._render();\n  },\n\n  onRemove() {\n    if (this.wind) {\n      this.wind.stop();\n    }\n    this._map.getPanes().overlayPane.removeChild(this.layer);\n\n    this._map.off(this.getEvents(), this);\n\n    this.canvas = null;\n  },\n\n  getEvents() {\n    const events: {\n      [key: string]: any;\n    } = {\n      resize: this._onResize,\n      viewreset: this._render,\n      moveend: this._render,\n      // movestart: this._moveStart,\n      // zoomStart: this._zoomStart,\n      zoomEnd: this._render,\n      // zoomanim: undefined,\n    };\n\n    if (this._map.options.zoomAnimation && L.Browser.any3d) {\n      events.zoomanim = this._animateZoom;\n    }\n\n    return events;\n  },\n\n  pickWindOptions() {\n    Object.keys(defaultOptions).forEach((key: string) => {\n      if (key in this.options) {\n        if (this.options.windOptions === undefined) {\n          this.options.windOptions = {};\n        }\n        // @ts-ignore\n        this.options.windOptions[key] = this.options[key];\n      }\n    });\n  },\n\n  /**\n   * get wind layer data\n   */\n  getData() {\n    return this.field;\n  },\n\n  /**\n   * set layer data\n   * @param data\n   * @param options\n   * @returns {WindLayer}\n   */\n  setData(data: any, options: Partial<IField> = {}) {\n    if (data && data.checkFields && data.checkFields()) {\n      this.field = data;\n    } else if (isArray(data)) {\n      this.field = formatData(data, options);\n    } else {\n      console.error('Illegal data');\n    }\n\n    if (this.field) {\n      this?.wind?.updateData(this.field);\n    }\n    return this;\n  },\n\n  setWindOptions(options: Partial<IOptions>) {\n    const beforeOptions = this.options.windOptions || {};\n    this.options = assign(this.options, {\n      windOptions: assign(beforeOptions, options || {}),\n    });\n\n    if (this.wind) {\n      const windOptions = this.options.windOptions;\n      this.wind.setOptions(windOptions);\n      this.wind.prerender();\n    }\n  },\n\n  getWindOptions() {\n    return this.options.windOptions || {};\n  },\n});\n\nexport { Field, WindLayer };\n\nexport default WindLayer;\n"],"names":[],"mappings":"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"}